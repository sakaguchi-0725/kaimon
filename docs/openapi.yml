openapi: 3.0.0
info:
  title: Share Basket API
  description: API for Share Basket application
  version: 1.0.0
servers:
  - url: /api
    description: API server
tags:
  - name: Auth
    description: 認証関連のAPI
  - name: Group
    description: グループ関連のAPI
paths:
  /signup:
    post:
      tags:
        - Auth
      summary: ユーザー登録
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '204':
          description: ユーザー登録成功
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /groups:
    get:
      tags:
        - Group
      summary: 参加しているグループ一覧取得
      description: ユーザーが参加しているグループの一覧を取得します
      security:
        - bearerAuth: []
      responses:
        '200':
          description: グループ一覧取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJoinedGroupsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Group
      summary: グループ作成
      description: 新しいグループを作成します
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        '201':
          description: グループ作成成功
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GroupLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /groups/{id}:
    get:
      tags:
        - Group
      summary: グループ詳細取得
      description: 指定されたグループの詳細情報を取得します
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: グループID
          schema:
            type: string
      responses:
        '200':
          description: グループ詳細取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /groups/{id}/members:
    get:
      tags:
        - Group
      summary: グループメンバー一覧取得
      description: 指定されたグループのメンバー一覧を取得します
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: グループID
          schema:
            type: string
      responses:
        '200':
          description: グループメンバー一覧取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupMembersResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /groups/{id}/items:
    get:
      tags:
        - Group
      summary: ショッピングアイテム一覧取得
      description: 指定されたグループのショッピングアイテム一覧を取得します
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: グループID
          schema:
            type: string
        - in: query
          name: categoryId
          required: false
          description: カテゴリーID
          schema:
            type: integer
        - in: query
          name: status
          required: false
          description: ステータス
          schema:
            $ref: '#/components/schemas/ShoppingItemStatus'
        - in: query
          name: limit
          required: false
          description: 取得件数（デフォルト：20）
          schema:
            type: integer
            default: 20
        - in: query
          name: offset
          required: false
          description: 取得開始位置（デフォルト：0）
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: ショッピングアイテム一覧取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShoppingItemsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  responses:
    BadRequest:
      description: リクエスト不正
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 'BAD_REQUEST'
            message: 'リクエストが不正です'
    ExpiredCode:
      description: 確認コードの有効期限切れ
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 'EXPIRED_CODE'
            message: '確認コードの有効期限が切れています'
    Unauthorized:
      description: 認証エラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 'UNAUTHORIZED'
            message: 'メールアドレスまたはパスワードが正しくありません'
    Forbidden:
      description: アクセス権限がありません
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 'FORBIDDEN'
            message: 'リソースへのアクセス権限がありません'
    NotFound:
      description: リソースが見つかりません
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 'NOT_FOUND'
            message: 'グループが見つかりません'
    GroupLimitExceeded:
      description: グループ数制限超過
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 'GROUP_LIMIT_EXCEEDED'
            message: 'グループ数の上限に達しています。プランをアップグレードすると、より多くのグループを作成できます。'
    InternalServerError:
      description: サーバーエラー
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 'INTERNAL_SERVER_ERROR'
            message: 'サーバーエラーが発生しました'
  schemas:
    SignUpRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: ユーザー名
        profileImageUrl:
          type: string
          description: プロフィール画像URL
    GetJoinedGroupsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            $ref: '#/components/schemas/JoinedGroup'
    JoinedGroup:
      type: object
      properties:
        id:
          type: string
          description: グループID
        name:
          type: string
          description: グループ名
        memberCount:
          type: integer
          description: メンバー数
    CreateGroupRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: グループ名
        description:
          type: string
          description: グループ説明
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: エラーコード
        message:
          type: string
          description: エラーメッセージ
    GetGroupResponse:
      type: object
      properties:
        id:
          type: string
          description: グループID
        name:
          type: string
          description: グループ名
        description:
          type: string
          description: グループ説明
        createdAt:
          type: string
          format: date-time
          description: グループ作成日時
    GetGroupMembersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
    Member:
      type: object
      properties:
        id:
          type: string
          description: メンバーID
        name:
          type: string
          description: メンバー名
        role:
          $ref: '#/components/schemas/MemberRole'
          description: メンバーの役割
        status:
          $ref: '#/components/schemas/MemberStatus'
          description: メンバーのステータス
        joinedAt:
          type: string
          format: date-time
          description: メンバー参加日時
    MemberRole:
      type: string
      description: メンバーの役割
      enum: [admin, member]
    MemberStatus:
      type: string
      description: メンバーのステータス
      enum: [active, pending]
    GetShoppingItemsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ShoppingItem'
        totalCount:
          type: integer
          format: int64
          description: 全アイテム数
        hasNext:
          type: boolean
          description: 次のページがあるかどうか
    ShoppingItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: アイテムID
        name:
          type: string
          description: アイテム名
        memberId:
          type: string
          description: 登録者ID
        status:
          $ref: '#/components/schemas/ShoppingItemStatus'
    ShoppingItemStatus:
      type: string
      description: 買い物メモのステータス
      enum: [UNPURCHASED, PURCHASED, IN_CART]
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer